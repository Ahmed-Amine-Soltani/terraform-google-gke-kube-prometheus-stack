# Default values for company-calert.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

calert:
  replicaCount: 1

  image:
    repository: dockerhub.artifactory.company.com/mrkaran/calert:latest
    pullPolicy: IfNotPresent

  imagePullSecrets: []
  nameOverride: "calert"
  fullnameOverride: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: calert

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    port: 6000

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  nodeSelector: {}
  tolerations: []
  affinity: {}

  configmap: |
    # All timeouts and durations are in milliseconds.

    [server]
    address = ":6000"
    socket = "/tmp/calert.sock"
    name = "calert"

    # WARNING If these timeouts are less than 1s,
    # the server connection breaks.
    read_timeout=5000
    write_timeout=5000
    keepalive_timeout=300000

    [app]
    template_file = "/etc/calert/message.tmpl"

    [app.http_client]
    max_idle_conns =  100
    request_timeout = 8000

  alertmanager:
    rooms:
      # GoogleChatRoomName: "https://chat.googleapis.com/webhook/endpoint/URL"

    template: true
    templateName: calert-alertmanager-config
    templateFile: |-
      {{`*{{ .Labels.alertname }} - {{ .Status | toUpper }} ({{ .Labels.severity | toUpper }})*
      {{ range .Annotations.SortedPairs -}}
      *{{ .Name |  }}:* {{ .Value}}
      {{ end -}}`}}
      ```{{`
      {{- range .Labels.SortedPairs -}}
      {{ .Name | }}: {{ .Value }}
      {{ end -}}`}}
      ```
      
redis:
  replicaCount: 1

  image:
    repository: dockerhub.artifactory.company.com/redis:latest
    pullPolicy: IfNotPresent

  imagePullSecrets: []
  nameOverride: "redis"
  fullnameOverride: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: redis

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    port: 6379

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  nodeSelector: {}
  tolerations: []
  affinity: {}